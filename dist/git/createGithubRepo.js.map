{"version":3,"sources":["../../src/git/createGithubRepo.js"],"names":["exec","get","multiArgs","context","executeCmd","cmd","removeNewline","str","slice","length","createGithubRepo","githubUserOutput","githubUser","githubTokenOutput","githubToken","dirOutput","dir","projectName","projectDesc","config","url","method","auth","username","password","data","name","description","private","has_issues","has_wiki","has_downloads","response","request","status"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,OAAO,qBAAU,kBAAQC,GAAlB,EAAuB,EAAEC,WAAW,IAAb,EAAmBC,0BAAnB,EAAvB,CAAb;AACA,MAAMC;AAAA,+BAAa,WAAOC,GAAP;AAAA,WAAe,MAAML,KAAKK,GAAL,CAArB;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAEA,MAAMC,gBAAiBC,GAAD,IAASA,IAAIC,KAAJ,CAAU,CAAV,EAAaD,IAAIE,MAAJ,GAAa,CAA1B,CAA/B;;AAEO,MAAMC;AAAA,gCAAmB,aAAY;AAC1C,UAAMC,mBAAmB,MAAMP,WAAW,0BAAX,CAA/B;AACA,UAAMQ,aAAaN,cAAcK,gBAAd,CAAnB;;AAEA,UAAME,oBAAoB,MAAMT,WAAW,2BAAX,CAAhC;AACA,UAAMU,cAAcR,cAAcO,iBAAd,CAApB;;AAEA;AACA,UAAME,YAAY,QAAlB;AACA,UAAMC,MAAMV,cAAcS,SAAd,CAAZ;;AAEA,UAAME,cAAe,GAAED,GAAI,GAA3B;AACA,UAAME,cAAe,GAAED,WAAY,wCAAnC;;AAEA,UAAME,SAAS;AACbC,WAAK,mCADQ;AAEbC,cAAQ,MAFK;AAGbC,YAAM;AACJC,kBAAUX,UADN;AAEJY,kBAAUV;AAFN,OAHO;AAObW,YAAM;AACJC,cAAMT,WADF;AAEJU,qBAAaT,WAFT;AAGJU,iBAAS,IAHL;AAIJC,oBAAY,IAJR;AAKJC,kBAAU,IALN;AAMJC,uBAAe;AANX;AAPO,KAAf;;AAiBA,UAAMC,WAAW,MAAM,gBAAMC,OAAN,CAAcd,MAAd,CAAvB;AACA,WAAOa,SAASE,MAAhB;AACD,GAjCY;;AAAA;AAAA;AAAA;AAAA,IAAN","file":"createGithubRepo.js","sourcesContent":["import nodeCmd from 'node-cmd';\nimport axios from 'axios';\nimport { promisify } from 'util';\n\nconst exec = promisify(nodeCmd.get, { multiArgs: true, context: nodeCmd });\nconst executeCmd = async (cmd) => await exec(cmd);\n\nconst removeNewline = (str) => str.slice(0, str.length - 1);\n\nexport const createGithubRepo = async () => {\n  const githubUserOutput = await executeCmd('(git config github.user)');\n  const githubUser = removeNewline(githubUserOutput);\n\n  const githubTokenOutput = await executeCmd('(git config github.token)');\n  const githubToken = removeNewline(githubTokenOutput);\n\n  // const dirOutput = await executeCmd('basename `pwd`');\n  const dirOutput = 'proj\\n';\n  const dir = removeNewline(dirOutput);\n\n  const projectName = `${dir}x`;\n  const projectDesc = `${projectName} - Could use a little more description`;\n\n  const config = {\n    url: 'https://api.github.com/user/repos',\n    method: 'post',\n    auth: {\n      username: githubUser,\n      password: githubToken\n    },\n    data: {\n      name: projectName,\n      description: projectDesc,\n      private: true,\n      has_issues: true,\n      has_wiki: true,\n      has_downloads: false\n    }\n  };\n\n  const response = await axios.request(config);\n  return response.status;\n};\n"]}