{"version":3,"sources":["../../src/git/github.js"],"names":["exec","get","multiArgs","context","executeCmd","cmd","setGithubOrigin","username","projectName"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,OAAO,qBAAU,kBAAQC,GAAlB,EAAuB,EAAEC,WAAW,IAAb,EAAmBC,0BAAnB,EAAvB,CAAb;AACA,MAAMC;AAAA,+BAAa,WAAMC,GAAN;AAAA,WAAa,MAAML,KAAKK,GAAL,CAAnB;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAEA,MAAMC;AAAA,gCAAkB,WAAOC,QAAP,EAAiBC,WAAjB;AAAA,WACtB,MAAMJ,WACH,4CAA2CG,QAAS,IAAGC,WAAY,MADhE,CADgB;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,IAAN;;QAKSF,e,GAAAA,e;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"github.js","sourcesContent":["import nodeCmd from 'node-cmd';\nimport { promisify } from 'util';\n\nconst exec = promisify(nodeCmd.get, { multiArgs: true, context: nodeCmd });\nconst executeCmd = async cmd => await exec(cmd);\n\nconst setGithubOrigin = async (username, projectName) =>\n  await executeCmd(\n    `git remote set-url origin git@github.com:${username}/${projectName}.git`\n  );\n\nexport { setGithubOrigin };\n\n// const main = async () => {\n//   try {\n//     log('lets do this!');\n//     const githubUser = 'sandalsoft';\n//     const projectName = 'boober';\n//     const output = await executeGitSetOrigin(githubUser, projectName);\n//     log(output);\n//   } catch (err) {\n//     log(new Error(err.stack) || new Error(err));\n//   }\n// };\n\n// main();\n"]}